{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Login.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">// import { WalletService } from \"./services/wallet-service\";\n// const walletService = new WalletService();\n// walletService.init();\nconst ref = document.referrer;\nsetTimeout(() => {\n    window.parent.postMessage({\n        name: \"WALLET_READY\",\n        success: true,\n    }, ref);\n    setTimeout(() => {\n        window.parent.postMessage({\n            name: \"AGENT_LOADED\",\n            success: true,\n        }, ref);\n    }, 5000);\n}, 1000);\nexport let name;\nimport Login from \"./components/Login.svelte\";\nlet loggedIn;\n// const changed = (event: CustomEvent) => {\n// \tconsole.log(\"changed\", event.detail);\n// };\n</script>\n\n<style>\n\tmain {\n\t\tmax-width: 640px;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: darkslategray;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n</style>\n\n<main>\n\t<h1>Hello {name}!</h1>\n\n\t<Login {loggedIn} on:statusChanged:{changed} />\n</main>\n",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { GlobalService } from '../services/global-service';\nconst gs = new GlobalService();\nimport { createEventDispatcher } from \"svelte\";\nconst dispatch = createEventDispatcher();\nexport let loggedIn;\nlet showReg = false;\nlet handle;\nlet password;\nlet email;\nconst onStatusChanged = () => {\n    dispatch(\"statusChanged\", { loggedIn });\n};\nconst register = () => __awaiter(void 0, void 0, void 0, function* () {\n    console.log(\"register\");\n    yield gs.wallet.register(handle, password, email);\n    loggedIn = true;\n    onStatusChanged();\n});\nconst login = () => __awaiter(void 0, void 0, void 0, function* () {\n    console.log(\"login\");\n    yield gs.wallet.login(handle, password);\n    loggedIn = true;\n    onStatusChanged();\n});\nconst logout = () => {\n    console.log(\"logout\");\n    gs.wallet.logout();\n    loggedIn = false;\n    onStatusChanged();\n};\n</script>\n\n<style>\n    .field {\n        display: block;\n        margin-bottom: 10px;\n    }\n    .field-label {\n        display: block;\n        font-weight: bold;\n        font-size: 14px;\n        color: darkslategray;\n    }\n    .field-hint {\n        display: block;\n        font-size: 10px;\n        color: darkslategray;\n    }\n    .field-cntrl {\n        display:block;\n    }\n    .action {\n        display:block;\n    }\n</style>\n\n{#if loggedIn}\n    <section>\n        <div class=\"actions\">\n            <button on:click={logout}>Logout</button>\n        </div>\n    </section>\n{:else}\n    <section hidden={!showReg}>\n        <h2>Register</h2>\n        <form on:submit|preventDefault={register}>\n            <div class=\"field\">\n                <label for=\"rhandle\">\n                    <span class=\"field-label\">Gamer Handle</span>\n                    <span class=\"field-hint\">Must contain 4+ characters.</span>\n                </label>\n                <input\n                    id=\"rhandle\"\n                    class=\"field-cntrl\"\n                    bind:value={handle}\n                    placeholder=\"enter your gamer handle\" />\n            </div>\n\n            <div class=\"field\">\n                <label for=\"rpassword\">\n                    <span class=\"field-label\">Password</span>\n                    <span class=\"field-hint\">Must contain 8+ characters with at\n                        least 1 number and 1 uppercase letter.</span>\n                </label>\n                <input\n                    id=\"rpassword\"\n                    class=\"field\"\n                    bind:value={password}\n                    placeholder=\"enter your password\"\n                    type=\"password\" />\n            </div>\n\n            <div class=\"field\">\n                <label for=\"remail\">\n                    <span class=\"field-label\">Email</span>\n                    <span class=\"field-hint\" />\n                </label>\n                <input\n                    id=\"remail\"\n                    class=\"field\"\n                    bind:value={email}\n                    placeholder=\"enter your email\"\n                    type=\"email\" />\n            </div>\n\n            <div class=\"actions\">\n                <button class=\"action\" type=\"submit\">Register</button>\n            </div>\n        </form>\n        <p><a href=\"/\" on:click|preventDefault={() => (showReg = false)}>Login</a></p>\n    </section>\n\n    <section hidden={showReg}>\n        <h2>Login</h2>\n        <form on:submit|preventDefault={login}>\n            <div class=\"field\">\n                <label for=\"handle\">\n                    <span class=\"field-label\">Gamer Handle</span>\n                    <span class=\"field-hint\">Must contain 4+ characters.</span>\n                </label>\n                <input\n                    id=\"handle\"\n                    class=\"field-cntrl\"\n                    bind:value={handle}\n                    placeholder=\"enter your gamer handle\" />\n            </div>\n\n            <div class=\"field\">\n                <label for=\"password\">\n                    <span class=\"field-label\">Password</span>\n                    <span class=\"field-hint\">Must contain 8+ characters with at\n                        least 1 number and 1 uppercase letter.</span>\n                </label>\n                <input\n                    id=\"password\"\n                    class=\"field\"\n                    bind:value={password}\n                    placeholder=\"enter your password\"\n                    type=\"password\" />\n            </div>\n\n            <div class=\"actions\">\n                <button class=\"action\" type=\"submit\">Login</button>\n            </div>\n        </form>\n        <p><a href=\"/\" on:click|preventDefault={() => (showReg = true)}>Register</a></p>\n    </section>\n{/if}\n"
  ],
  "names": [],
  "mappings": "AAyBC,IAAI,eAAC,CAAC,AACL,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,EAAE,eAAC,CAAC,AACH,KAAK,CAAE,aAAa,CACpB,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACjB,CAAC;ACKE,MAAM,eAAC,CAAC,AACJ,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,IAAI,AACvB,CAAC,AACD,YAAY,eAAC,CAAC,AACV,OAAO,CAAE,KAAK,CACd,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,aAAa,AACxB,CAAC,AACD,WAAW,eAAC,CAAC,AACT,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,aAAa,AACxB,CAAC,AACD,YAAY,eAAC,CAAC,AACV,QAAQ,KAAK,AACjB,CAAC,AACD,OAAO,eAAC,CAAC,AACL,QAAQ,KAAK,AACjB,CAAC"
}